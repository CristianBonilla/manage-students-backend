// <auto-generated />
using System;
using ManageStudents.Infrastructure.Contexts.ManageStudents;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManageStudents.Infrastructure.Contexts.ManageStudents.Migrations
{
    [DbContext(typeof(ManageStudentsContext))]
    [Migration("20250918072536_CreateGrade")]
    partial class CreateGrade
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManageStudents.Domain.Entities.GradeEntity", b =>
                {
                    b.Property<Guid>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<float>("Value")
                        .HasColumnType("real")
                        .HasColumnOrder(1);

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnOrder(4);

                    b.HasKey("GradeId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId", "StudentId");

                    b.ToTable("Grade", "dbo");

                    b.HasData(
                        new
                        {
                            GradeId = new Guid("ab8d7d96-e41a-4ede-8c19-2561d091ed5c"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            StudentId = new Guid("65ecd151-b88f-4d34-bf53-40bc70c0114d"),
                            TeacherId = new Guid("8a05ac05-874c-4613-b29e-6fcd8feac250"),
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = 4.7f
                        },
                        new
                        {
                            GradeId = new Guid("729617e4-7a24-433e-ae7f-c7fa36e80a1b"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            StudentId = new Guid("65ecd151-b88f-4d34-bf53-40bc70c0114d"),
                            TeacherId = new Guid("ec5598c7-d66e-4197-ba2b-ba75d31c7227"),
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = 5f
                        },
                        new
                        {
                            GradeId = new Guid("e3e942da-ce8d-41ac-973c-3bcaf848646f"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            StudentId = new Guid("41133742-0044-4ca8-bdc8-95ed7f82ec49"),
                            TeacherId = new Guid("c9dbbc9c-cff7-45f8-8578-dedd939aa239"),
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = 3.1f
                        },
                        new
                        {
                            GradeId = new Guid("178a3671-dd4e-451d-ab7e-65897a78997d"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            StudentId = new Guid("41133742-0044-4ca8-bdc8-95ed7f82ec49"),
                            TeacherId = new Guid("44d3a8bf-a043-4587-a642-c4905c775e70"),
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = 2.8f
                        },
                        new
                        {
                            GradeId = new Guid("d3960faa-ca0b-457b-ae0e-2dc5b5e53abd"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            StudentId = new Guid("2942cb83-78f5-47d0-bf5b-7afc902da439"),
                            TeacherId = new Guid("8a05ac05-874c-4613-b29e-6fcd8feac250"),
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = 4.1f
                        },
                        new
                        {
                            GradeId = new Guid("0655b98d-8437-4a63-be12-b172c869b6a3"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            StudentId = new Guid("2942cb83-78f5-47d0-bf5b-7afc902da439"),
                            TeacherId = new Guid("44d3a8bf-a043-4587-a642-c4905c775e70"),
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = 4.6f
                        },
                        new
                        {
                            GradeId = new Guid("31e9714a-a075-493c-9774-d29653968859"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            StudentId = new Guid("650da35f-27a7-4e0a-8f27-f474da063fa1"),
                            TeacherId = new Guid("bc6d7998-128e-4e30-afa9-6aa7a3af9b85"),
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = 3.2f
                        },
                        new
                        {
                            GradeId = new Guid("bfc36aea-6078-4f9e-832c-8e50c37c5599"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            StudentId = new Guid("650da35f-27a7-4e0a-8f27-f474da063fa1"),
                            TeacherId = new Guid("c9dbbc9c-cff7-45f8-8578-dedd939aa239"),
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Value = 4.3f
                        });
                });

            modelBuilder.Entity("ManageStudents.Domain.Entities.StudentEntity", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(6)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(3);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(2);

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnOrder(8);

                    b.HasKey("StudentId");

                    b.HasIndex("DocumentNumber", "Mobile", "Email")
                        .IsUnique();

                    b.ToTable("Student", "dbo");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("65ecd151-b88f-4d34-bf53-40bc70c0114d"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "8721049385",
                            Email = "laura.gomez@demo.edu",
                            Firstname = "Laura",
                            Lastname = "Gómez",
                            Mobile = "3009182736",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("41133742-0044-4ca8-bdc8-95ed7f82ec49"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "3948271056",
                            Email = "carlos.ramirez@demo.edu",
                            Firstname = "Carlos",
                            Lastname = "Ramírez",
                            Mobile = "3018472938",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("2942cb83-78f5-47d0-bf5b-7afc902da439"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "5610928374",
                            Email = "sofia.martinez@demo.edu",
                            Firstname = "Sofía",
                            Lastname = "Martínez",
                            Mobile = "3027381920",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("650da35f-27a7-4e0a-8f27-f474da063fa1"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "7083946152",
                            Email = "andres.torres@demo.edu",
                            Firstname = "Andrés",
                            Lastname = "Torres",
                            Mobile = "3039182746",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("6de4e016-291d-4f6d-954b-ca889d2b04e5"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "2398471056",
                            Email = "valentina.lopez@demo.edu",
                            Firstname = "Valentina",
                            Lastname = "López",
                            Mobile = "3048291736",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("0a5f090d-c8af-4721-a98d-9fd4ee998cd5"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "9847201938",
                            Email = "miguel.castro@demo.edu",
                            Firstname = "Miguel",
                            Lastname = "Castro",
                            Mobile = "3057382910",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("0d8b8543-a59d-4048-b314-15db7386b8fd"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "6172039485",
                            Email = "camila.rojas@demo.edu",
                            Firstname = "Camila",
                            Lastname = "Rojas",
                            Mobile = "3109283746",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("608b4a71-658f-40fd-87ab-1ae29cc01b45"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "4301928475",
                            Email = "juan.moreno@demo.edu",
                            Firstname = "Juan",
                            Lastname = "Moreno",
                            Mobile = "3118472039",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("19427288-4e69-403d-84dc-24ed56672f75"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "2958371046",
                            Email = "isabela.cardenas@demo.edu",
                            Firstname = "Isabela",
                            Lastname = "Cárdenas",
                            Mobile = "3127381928",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("ef766d96-3a36-47d5-9f7c-2b14b7a0fbae"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "8037461925",
                            Email = "sebastian.vargas@demo.edu",
                            Firstname = "Sebastián",
                            Lastname = "Vargas",
                            Mobile = "3139182730",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("ad5db6a1-2ba7-44c5-91ef-fe484907e4ba"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "9182736450",
                            Email = "daniela.reyes@demo.edu",
                            Firstname = "Daniela",
                            Lastname = "Reyes",
                            Mobile = "3148291738",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("cf5057b1-1b50-4095-b227-7544adb8c9c9"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "3748291056",
                            Email = "tomas.gutierrez@demo.edu",
                            Firstname = "Tomás",
                            Lastname = "Gutiérrez",
                            Mobile = "3157382916",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("69c8eaf4-f08a-4b07-970b-d728c79584d6"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "6203948172",
                            Email = "lucia.pena@demo.edu",
                            Firstname = "Lucía",
                            Lastname = "Peña",
                            Mobile = "3169283745",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("4c16254c-0b81-4a90-a54d-e4701b6e0727"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "7592837461",
                            Email = "mateo.jimenez@demo.edu",
                            Firstname = "Mateo",
                            Lastname = "Jiménez",
                            Mobile = "3178472038",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("f22e7be2-53a2-443e-8080-3a2311b928b9"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "8461928375",
                            Email = "mariana.suarez@demo.edu",
                            Firstname = "Mariana",
                            Lastname = "Suárez",
                            Mobile = "3187381927",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("93beaedd-686c-4e2a-9cf1-1cc6778949a3"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "3029481756",
                            Email = "felipe.navarro@demo.edu",
                            Firstname = "Felipe",
                            Lastname = "Navarro",
                            Mobile = "3199182739",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("55e75efe-44ca-4308-8827-9ac95aaf29eb"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "6819203745",
                            Email = "gabriela.ortiz@demo.edu",
                            Firstname = "Gabriela",
                            Lastname = "Ortiz",
                            Mobile = "3208291737",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("a156ce94-516a-44ae-9efa-f2c37804a4e5"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "4938271059",
                            Email = "diego.mendoza@demo.edu",
                            Firstname = "Diego",
                            Lastname = "Mendoza",
                            Mobile = "3217382915",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("f0493ab5-325c-46a3-9969-e81b6247f4bc"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "7203846159",
                            Email = "paula.salazar@demo.edu",
                            Firstname = "Paula",
                            Lastname = "Salazar",
                            Mobile = "3229283747",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            StudentId = new Guid("0112dba6-8437-46e4-a7e9-24d48d88f57b"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "3859201746",
                            Email = "julian.mejia@demo.edu",
                            Firstname = "Julián",
                            Lastname = "Mejía",
                            Mobile = "3238472037",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("ManageStudents.Domain.Entities.TeacherEntity", b =>
                {
                    b.Property<Guid>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(3);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(4);

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(2);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(8)
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnOrder(9);

                    b.HasKey("TeacherId");

                    b.HasIndex("DocumentNumber", "Mobile", "Email")
                        .IsUnique();

                    b.ToTable("Teacher", "dbo");

                    b.HasData(
                        new
                        {
                            TeacherId = new Guid("8a05ac05-874c-4613-b29e-6fcd8feac250"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "9831047265",
                            Email = "ana.pineda@demo.edu",
                            Firstname = "Ana",
                            Lastname = "Pineda",
                            Mobile = "3007123845",
                            Subject = "Mathematics",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            TeacherId = new Guid("ec5598c7-d66e-4197-ba2b-ba75d31c7227"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "1203984756",
                            Email = "luis.montoya@demo.edu",
                            Firstname = "Luis",
                            Lastname = "Montoya",
                            Mobile = "3019837264",
                            Subject = "Spanish",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            TeacherId = new Guid("c9dbbc9c-cff7-45f8-8578-dedd939aa239"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "6572039184",
                            Email = "claudia.herrera@demo.edu",
                            Firstname = "Claudia",
                            Lastname = "Herrera",
                            Mobile = "3021749382",
                            Subject = "Biology",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            TeacherId = new Guid("44d3a8bf-a043-4587-a642-c4905c775e70"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "3049182736",
                            Email = "jorge.valencia@demo.edu",
                            Firstname = "Jorge",
                            Lastname = "Valencia",
                            Mobile = "3048261937",
                            Subject = "PoliticalScience",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            TeacherId = new Guid("bc6d7998-128e-4e30-afa9-6aa7a3af9b85"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "8493027165",
                            Email = "marcela.cruz@demo.edu",
                            Firstname = "Marcela",
                            Lastname = "Cruz",
                            Mobile = "3059172836",
                            Subject = "Chemistry",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            TeacherId = new Guid("4e6b055a-4699-4c61-a476-f2a98f23cc54"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "7102938465",
                            Email = "ricardo.salinas@demo.edu",
                            Firstname = "Ricardo",
                            Lastname = "Salinas",
                            Mobile = "3103847261",
                            Subject = "Physics",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            TeacherId = new Guid("2356f96f-fa55-4b35-86c9-4dcbc0d04924"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "5928371046",
                            Email = "patricia.mora@demo.edu",
                            Firstname = "Patricia",
                            Lastname = "Mora",
                            Mobile = "3119283746",
                            Subject = "PhysicalEducation",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            TeacherId = new Guid("e81bfaa9-dc56-4703-b3dd-1564fc21d33a"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "4382910675",
                            Email = "fernando.garcia@demo.edu",
                            Firstname = "Fernando",
                            Lastname = "García",
                            Mobile = "3126471938",
                            Subject = "Mathematics",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            TeacherId = new Guid("e41385d8-e050-4ac3-a924-c3237731dace"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "6293847102",
                            Email = "sandra.luna@demo.edu",
                            Firstname = "Sandra",
                            Lastname = "Luna",
                            Mobile = "3138294750",
                            Subject = "Chemistry",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            TeacherId = new Guid("686692a7-2cbc-42c9-97b1-f99cdc454edb"),
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DocumentNumber = "3759102846",
                            Email = "hector.ruiz@demo.edu",
                            Firstname = "Héctor",
                            Lastname = "Ruiz",
                            Mobile = "3147382916",
                            Subject = "Physics",
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("ManageStudents.Domain.Entities.GradeEntity", b =>
                {
                    b.HasOne("ManageStudents.Domain.Entities.StudentEntity", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManageStudents.Domain.Entities.TeacherEntity", "Teacher")
                        .WithMany("Grades")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ManageStudents.Domain.Entities.StudentEntity", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("ManageStudents.Domain.Entities.TeacherEntity", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
